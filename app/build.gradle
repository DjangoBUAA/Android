apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.imczy.googlehost"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
signingConfigs {
        debug {

        }

        release {
            storeFile
            storePassword
            keyAlias
            keyPassword
        }

    }

    getSigningProperties()

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources true    // 移除无用的resource文件
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.loopj.android:android-async-http:1.4.9'

}

def getSigningProperties(){    
def propFile = file('../local.properties')    
if (propFile.canRead()){        
def Properties props = new Properties()
        props.load(new FileInputStream(propFile))        
if (props!=null && props.containsKey('key.store') && props.containsKey('key.store.password') &&
                props.containsKey('key.alias')) {
            android.signingConfigs.release.storeFile = file(props['key.store'])
            android.signingConfigs.release.storePassword = props['key.store.password']
            android.signingConfigs.release.keyAlias = props['key.alias']
            android.signingConfigs.release.keyPassword = props['key.store.password']
        } else {
            println 'local.properties found but some entries are missing'
            android.buildTypes.release.signingConfig = null
        }
    }else {
        println 'local.properties not found'
        android.buildTypes.release.signingConfig = null
    }
}
